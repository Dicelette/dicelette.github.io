"use strict";(self.webpackChunkdicelette_docs=self.webpackChunkdicelette_docs||[]).push([[4707],{28494:(e,n,s)=>{s.r(n),s.d(n,{CL:()=>l,assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"usage/model/calc","title":"Calculations","description":"Based on statistic (/calc)","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/usage/model/calc.mdx","sourceDirName":"usage/model","slug":"/usage/model/calc","permalink":"/en/docs/usage/model/calc","draft":false,"unlisted":false,"editUrl":"https://github.com/Dicelette/docs/tree/main/docs/usage/model/calc.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Calculations","sidebar_position":2},"sidebar":"commands","previous":{"title":"Dice Rolling","permalink":"/en/docs/usage/model/dice"},"next":{"title":"Others","permalink":"/en/docs/usage/model/other"}}');var t=s(74848),c=s(28453);const i={title:"Calculations",sidebar_position:2},r=void 0,d={};function l({children:e}){const n={code:"code",...(0,c.R)()};return(0,t.jsx)(n.code,{style:{textDecoration:"underline",fontWeight:"bold"},children:e.toLowerCase()})}const a=[{value:"Based on statistic (<code>/calc</code>)",id:"based-on-statistic-calc",level:2},{value:"Simple (<code>/math</code>)",id:"simple-math",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"based-on-statistic-calc",children:["Based on statistic (",(0,t.jsx)(n.code,{children:"/calc"}),")"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"calc"})," allow to realize calculations with the statistics of the character and apply an ",(0,t.jsx)(n.a,{href:"/en/docs/introduction/expression",children:"expression"})]})}),"\n",(0,t.jsx)(n.admonition,{type:"usage",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"/calc [statistic] [*sign] [expression] (*transform) (*character) (comment)"})})})}),"\n",(0,t.jsx)(n.p,{children:"The command requires:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(l,{children:"statistic"})}),": The statistic to use."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(l,{children:"sign"})}),": The sign of the operation to perform. Valid signs are: ",(0,t.jsx)(n.code,{children:"+"}),", ",(0,t.jsx)(n.code,{children:"-"}),", ",(0,t.jsx)(n.code,{children:"*"}),", ",(0,t.jsx)(n.code,{children:"/"}),", ",(0,t.jsx)(n.code,{children:"^"})," (power), ",(0,t.jsx)(n.code,{children:"%"})," (modulo), ",(0,t.jsx)(n.code,{children:"/"})," (division), ",(0,t.jsx)(n.code,{children:"\u2260"})," (not equal to), ",(0,t.jsx)(n.code,{children:"="})," (equal to), ",(0,t.jsx)(n.code,{children:"\u2a7e"})," (greater than or equal to), ",(0,t.jsx)(n.code,{children:"\u2a7d"})," (less than or equal to), ",(0,t.jsx)(n.code,{children:">"})," (greater than), ",(0,t.jsx)(n.code,{children:"<"})," (less than)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(l,{children:"expression"})}),": The expression to apply."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(l,{children:"transform"})}),": The transformation to apply to the final result, including: ",(0,t.jsx)(n.code,{children:"ceil"})," (round up), ",(0,t.jsx)(n.code,{children:"floor"})," (round down), ",(0,t.jsx)(n.code,{children:"round"})," (round to the nearest integer), ",(0,t.jsx)(n.code,{children:"abs"})," (absolute value), ",(0,t.jsx)(n.code,{children:"sqrt"})," (square root), or ",(0,t.jsx)(n.code,{children:"square"})," (square the value). You can combine two transformations, such as ",(0,t.jsx)(n.code,{children:"ceil(abs())"}),". Additionally, it is possible to use ",(0,t.jsxs)(n.a,{href:"https://mathjs.org/docs/reference/functions.html",children:["functions supported by ",(0,t.jsx)(n.code,{children:"mathjs"})]}),", even if they are not in the list of suggested terms. The allowed function needs to take only one argument (or optionally two, but the second won't be set)."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:['It is possible to use the "non ascii" version of the signs, for example ',(0,t.jsx)(n.code,{children:">="})," for ",(0,t.jsx)(n.code,{children:"\u2a7e"})," or ",(0,t.jsx)(n.code,{children:"!="})," for ",(0,t.jsx)(n.code,{children:"\u2260"})," and ",(0,t.jsx)(n.code,{children:"=="})," for ",(0,t.jsx)(n.code,{children:"="}),"."]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"calc",src:s(55636).A+"",width:"1032",height:"143"})}),"\n",(0,t.jsxs)(n.h2,{id:"simple-math",children:["Simple (",(0,t.jsx)(n.code,{children:"/math"}),")"]}),"\n",(0,t.jsx)(n.admonition,{type:"usage",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"/math [expression] (*character) (comment)"})})})}),"\n",(0,t.jsxs)(n.p,{children:["The command allows you to perform a simple calculation without using a statistic. The expression can include mathematical operations, dice rolls, and functions supported by ",(0,t.jsx)(n.code,{children:"mathjs"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},55636:(e,n,s)=>{s.d(n,{A:()=>o});const o=s.p+"assets/images/calc-b204c1f6d5ae0024081c42269177b0a1.png"},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var o=s(96540);const t={},c=o.createContext(t);function i(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);