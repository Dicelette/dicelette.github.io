"use strict";(self.webpackChunkdicelette_docs=self.webpackChunkdicelette_docs||[]).push([[6902],{16567:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"sheet/model/critics","title":"Critics","description":"You can define:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/sheet/model/critics.md","sourceDirName":"sheet/model","slug":"/sheet/model/critics","permalink":"/en/docs/sheet/model/critics","draft":false,"unlisted":false,"editUrl":"https://github.com/Dicelette/docs/tree/main/docs/sheet/model/critics.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Critics","sidebar_position":3},"sidebar":"model","previous":{"title":"Dices","permalink":"/en/docs/sheet/model/dice"},"next":{"title":"Model generator","permalink":"/en/docs/sheet/form"}}');var c=s(74848),n=s(28453);const l={title:"Critics",sidebar_position:3},r=void 0,o={},a=[{value:"Basic critics",id:"basic-critics",level:2},{value:"Custom critics",id:"custom-critics",level:2},{value:"Skill Dice and Custom critics",id:"skill-dice-and-custom-critics",level:3}];function d(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(i.p,{children:"You can define:"}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsx)(i.li,{children:"Basic critics, linked to natural dice rolls, configurable for critical successes and failures."}),"\n",(0,c.jsx)(i.li,{children:"Custom critics, which can apply to natural rolls or total results and support formulas."}),"\n"]}),"\n",(0,c.jsxs)(i.p,{children:["By default, critics are only active for the ",(0,c.jsx)(i.code,{children:"/dbroll"})," command and display a special message based on the result."]}),"\n",(0,c.jsx)(i.h2,{id:"basic-critics",children:"Basic critics"}),"\n",(0,c.jsx)(i.p,{children:"These are tied to a natural roll and trigger only on equality. The value is configurable, but the displayed message is not:"}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["For a critical success: the message will be ",(0,c.jsx)(i.code,{children:"Critical Success"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["For a critical failure: the message will be ",(0,c.jsx)(i.code,{children:"Critical Failure"}),"."]}),"\n"]}),"\n",(0,c.jsx)(i.h2,{id:"custom-critics",children:"Custom critics"}),"\n",(0,c.jsxs)(i.p,{children:["Custom critics allow specific values to display a personalized message. Unlike basic critics, custom ones can compare totals ",(0,c.jsx)(i.strong,{children:"or"})," natural rolls and support formulas. They can also apply to skill dice. Up to 22 custom critics are allowed."]}),"\n",(0,c.jsxs)(i.p,{children:["Custom critics support the ",(0,c.jsx)(i.code,{children:"$"})," wildcard symbol (used for type dice comparisons) to compare against the active stat. You can also use stat names or combine them with other dice."]}),"\n",(0,c.jsxs)(i.admonition,{title:"Call of Cthulhu",type:"example",children:[(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.em,{children:"Reference"}),": ",(0,c.jsx)(i.a,{href:"https://cthulhuwiki.chaosium.com/rules/combat.html",children:"Call of Cthulhu RPG Wiki"}),(0,c.jsx)(i.br,{}),"\n","In Call of Cthulhu, successes are based on the stat value. The type dice would be ",(0,c.jsx)(i.code,{children:"1D100<=$"}),".",(0,c.jsx)(i.br,{}),"\n","Custom critics:"]}),(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:['"Major Success": ',(0,c.jsx)(i.code,{children:"<=round($/2)"})]}),"\n",(0,c.jsxs)(i.li,{children:['"Extreme Success": ',(0,c.jsx)(i.code,{children:"<=round($/5)"})]}),"\n"]})]}),"\n",(0,c.jsx)(i.h3,{id:"skill-dice-and-custom-critics",children:"Skill Dice and Custom critics"}),"\n",(0,c.jsx)(i.p,{children:"Only dice with a comparator will trigger custom critics."}),"\n",(0,c.jsxs)(i.p,{children:["When a custom critical uses the ",(0,c.jsx)(i.code,{children:"$"})," symbol, the value must appear in the ",(0,c.jsx)(i.strong,{children:"name"})," of the skill dice, enclosed in parentheses."]}),"\n",(0,c.jsx)(i.admonition,{type:"example",children:(0,c.jsxs)(i.p,{children:["For a custom critical with the value ",(0,c.jsx)(i.code,{children:"<=$"}),", if the skill dice is named ",(0,c.jsx)(i.code,{children:"Animal Instinct (Strength)"}),", ",(0,c.jsx)(i.code,{children:"$"})," will be replaced by the Strength stat value if it exists.",(0,c.jsx)(i.br,{}),"\n","If the name is not found, the comparison will not apply, and the dice will roll normally."]})}),"\n",(0,c.jsx)(i.p,{children:"Additionally, you can combine different stats, formulas, or dice rolls in the name of the dice."}),"\n",(0,c.jsx)(i.admonition,{type:"note",children:(0,c.jsx)(i.p,{children:"If the name itself includes a die roll, it will appear in the dice's comment instead of the result."})})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>r});var t=s(96540);const c={},n=t.createContext(c);function l(e){const i=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);