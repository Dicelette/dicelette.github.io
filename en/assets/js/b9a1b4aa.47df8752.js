"use strict";(self.webpackChunkdicelette_docs=self.webpackChunkdicelette_docs||[]).push([[742],{9054:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=t(3274),i=t(5618);const o={title:"Comportement"},a=void 0,l={id:"introduction/Usage/index",title:"Comportement",description:"The bot operates based on the usage of threads. Upon its initial launch, it will search for a thread prefixed with \ud83c\udfb2:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/introduction/Usage/index.md",sourceDirName:"introduction/Usage",slug:"/introduction/Usage/",permalink:"/en/docs/introduction/Usage/",draft:!1,unlisted:!1,editUrl:"https://github.com/Dicelette/docs/tree/main/docs/introduction/Usage/index.md",tags:[],version:"current",frontMatter:{title:"Comportement"},sidebar:"introduction",previous:{title:"Translation",permalink:"/en/docs/introduction/traduction"},next:{title:"Sending message",permalink:"/en/docs/introduction/Usage/message"}},r={},c=[{value:"Channels",id:"channels",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The bot operates based on the usage of threads. Upon its initial launch, it will search for a thread prefixed with ",(0,s.jsx)(n.code,{children:"\ud83c\udfb2"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If no thread is found, the bot will create a new one and direct all future logs there."}),"\n",(0,s.jsx)(n.li,{children:"However, if a thread already exists, the bot will select the most recent one and send logs there."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"In the event of multiple threads being discovered, the bot will use the most recent one and archive the others."})}),"\n",(0,s.jsxs)(n.p,{children:["Commands can also be executed within an existing thread. In this case, the bot will simply send the result there, accessible afterwards in channels whose names begin with ",(0,s.jsx)(n.code,{children:"\ud83c\udfb2"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["It's also possible to create a new thread using the command ",(0,s.jsx)(n.a,{href:"#create-a-new-scene",children:"Create a new scene"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"The bot also operates in forums, albeit with some differences:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multiple logs can exist simultaneously (unless they have exactly the same name)."}),"\n",(0,s.jsxs)(n.li,{children:["Logs will automatically be named ",(0,s.jsx)(n.code,{children:"\ud83c\udfb2 [topic name]"}),", with the automatic addition of the ",(0,s.jsx)(n.code,{children:"\ud83e\udea1 Dice Roll"})," tag (created if it doesn't exist)."]}),"\n",(0,s.jsx)(n.li,{children:"In this case, it's a message that will be created instead of a thread."}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"channels",children:"Channels"}),"\n",(0,s.jsxs)(n.p,{children:["The bot will ",(0,s.jsx)(n.strong,{children:"also"})," send the result to the channel where the command was initially sent. This message:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Will be deleted after 3 minutes."}),"\n",(0,s.jsx)(n.li,{children:"Will contain a link to the message in the log."}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"The bot can be:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Used with slash commands (see ",(0,s.jsx)(n.a,{href:"Usage/slashcommands",children:"Slashcommands"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"But also directly on the message."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5618:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(9474);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);