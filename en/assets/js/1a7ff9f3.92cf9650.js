"use strict";(self.webpackChunkdicelette_docs=self.webpackChunkdicelette_docs||[]).push([[544],{62739:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>r});var i=t(13274),s=t(42463);const o={title:"Roll dice & scenes",sidebar_position:3},c=void 0,d={id:"commands/roll",title:"Roll dice & scenes",description:"Dice Rolling",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/commands/roll.md",sourceDirName:"commands",slug:"/commands/roll",permalink:"/en/docs/commands/roll",draft:!1,unlisted:!1,editUrl:"https://github.com/Dicelette/docs/tree/main/docs/commands/roll.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Roll dice & scenes",sidebar_position:3},sidebar:"commands",previous:{title:"Character sheet",permalink:"/en/docs/commands/model"}},l={},r=[{value:"Dice Rolling",id:"dice-rolling",level:2},{value:"Creating a New Scene",id:"creating-a-new-scene",level:2}];function a(e){const n={admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"dice-rolling",children:"Dice Rolling"}),"\n",(0,i.jsx)(n.admonition,{type:"usage",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/roll (argument)"})})})}),"\n",(0,i.jsxs)(n.p,{children:['You can also use the "semi-direct" notation by adding a comment: ',(0,i.jsx)(n.code,{children:"/roll (dice comments)"}),"."]}),"\n",(0,i.jsx)(n.p,{children:'Please note that the "indirect" notation is not available in this mode.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Roll",src:t(6765).A+"",width:"1369",height:"488"})}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-new-scene",children:"Creating a New Scene"}),"\n",(0,i.jsx)(n.admonition,{type:"usage",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/scene [name] (tempo)"})})})}),"\n",(0,i.jsxs)(n.p,{children:["The bot will then create a new thread, prefixed with ",(0,i.jsx)(n.code,{children:"\ud83c\udfb2"}),", where it will send dice logs. This thread will be named after the ",(0,i.jsx)(n.code,{children:"scene"}),", and all other threads prefixed with ",(0,i.jsx)(n.code,{children:"\ud83c\udfb2"})," will be archived."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Scene",src:t(45469).A+"",width:"1595",height:"517"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"tempo"}),' argument allows you to create a "temporal bubble," which will create a thread prefixed with a clock icon, and by default, the channel name will be today\'s date.']})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},45469:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/scene-ddd51624fefa6a070d1834384032231d.gif"},6765:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/slash-commands-ecebd48fa903f7f68b540e5b260b96b6.gif"},42463:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var i=t(79474);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);